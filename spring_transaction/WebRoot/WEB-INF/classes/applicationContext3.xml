<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" 
       
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation=" http://www.springframework.org/schema/beans  
    	http://www.springframework.org/schema/beans/spring-beans.xsd 
    	http://www.springframework.org/schema/context  
   		http://www.springframework.org/schema/context/spring-context.xsd       
    	http://www.springframework.org/schema/tx  
    	http://www.springframework.org/schema/tx/spring-tx.xsd  
    	http://www.springframework.org/schema/aop  
    	http://www.springframework.org/schema/aop/spring-aop.xsd">  
    
    <!-- 上文最Spring开发最全的约束 -->
    <!-- 引入外部 属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!-- 配置c3p0的连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    	<property name="driverClass" value="${jdbc.driverClass}"/>
    	<property name="jdbcUrl" value="${jdbc.url}"/>
    	<property name="user" value="${jdbc.username}"/>
    	<property name="password" value="${jdbc.password}"/>
    </bean>
    
    <!-- 配置业务层的类 -->
    <bean id="accountService" class="cn.terence.spring.demo3.AccountServiceImpl">
    	<property name="accountDao" ref="accountDao"/>
    </bean>
    
     <!-- 配置Dao层的类 -->
    <bean id="accountDao" class="cn.terence.spring.demo3.AccountDaoImpl">
    	<!-- 注入连接池，可以利用jdbc的jar包里面的连接池创建模板 -->
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 1.配置事物管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 2.配置事务通知：（事务的增强） -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
    	<!-- 
    		propagation:事务传播行为
    		isolation:事务隔离级别
    		read-only:只读
    		rollback-for：发生哪些异常回滚
    		no-rollback-for:发生哪些异常不会滚
    		timeout:过期信息
    	
    	 -->
    		<tx:method name="transfer" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
    	</tx:attributes>
    </tx:advice>
    
    <!-- 3.配置切面 -->
    <aop:config>
    	<!-- 配置切入点 -->
    	<aop:pointcut expression="execution(* cn.terence.spring.demo3.AccountService+.*(..))"  id="pointcut1"/>
    	<!-- 配置切面 -->
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut1"/>
    	
    </aop:config>
        
 </beans>